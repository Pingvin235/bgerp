test-and-publish-update:
    image: markhobson/maven-chrome:jdk-11
    script:
        - apt-get update && apt-get install -y openssh-client ant rsync git-lfs
        - git checkout -B $CI_COMMIT_REF_NAME
        - git rev-parse --abbrev-ref HEAD
        - sh gradlew checkChanges test buildDoc
        - mkdir ~/.ssh && echo "$KEY_DOC" > ~/.ssh/id_rsa && chmod -R 600 ~/.ssh
        - sh gradlew buildUpdate buildUpdateLib publishUpdate
    except:
        refs:
            - master
            - p11862-documentation
            - p12094-integration-test

test-and-publish-update-master:
    image: markhobson/maven-chrome:jdk-11
    script:
        - apt-get update && apt-get install -y openssh-client ant rsync git-lfs
        - git checkout -B p00000-master
        - git rev-parse --abbrev-ref HEAD
        - sh gradlew test buildDoc #sonarqube
        - mkdir ~/.ssh && echo "$KEY_DOC" > ~/.ssh/id_rsa && chmod -R 600 ~/.ssh
        - sh gradlew buildUpdate buildUpdateLib
        - sh gradlew patchChanges && mv build/changes.txt build/changes.00000.txt
        - sh gradlew publishUpdate
    only:
        refs:
            - master

# also creates demo DB dump and uploads it to demo server
test-integration:
    image: markhobson/maven-chrome:jdk-11
    before_script:
        - export GRADLE_USER_HOME=`pwd`/.gradle
        - cat /etc/os-release
    cache:
        paths:
            - .gradle/wrapper
            - .gradle/caches
    script:
        - apt-get update && apt-get install -y default-mysql-client openssh-client zip
        # run integration test
        - mkdir -p filestorage
        - DB_ITEST_HOST='172.17.0.1' DB_ITEST_USER='itest'
        - GRADLE_OPTS=-Xmx1048m sh gradlew --debug -Pdb.host=$DB_ITEST_HOST -Pdb.user=$DB_ITEST_USER -Pdb.pswd="$DB_ITEST_PASSWORD" -Pwebdriver.chrome.driver=/usr/bin/chromedriver integrationTest
        # copy DB and filestorage content to demo server
        - echo "$KEY_DEMO" > ./demo.id_rsa && chmod 600 ./demo.id_rsa
        - mysqldump -h$DB_ITEST_HOST -u$DB_ITEST_USER -p$DB_ITEST_PASSWORD --add-drop-table bgerp > build/bgerp.sql
        - scp -i ./demo.id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build/bgerp.sql demo@bgerp.org:/home/demo
        - zip -r -j build/filestorage.zip filestorage/*
        - scp -i ./demo.id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null build/filestorage.zip demo@bgerp.org:/home/demo
    artifacts:
        paths:
            #- build/bgerp/*.zip
            #- build/bgerp.sql
            - target/reports/tests/integrationTest/*
        expire_in: 1 week
    tags:
        - itest-db
    only:
        refs:
            - master
            - p12094-integration-test

publish-doc:
    image: openjdk:11-jdk
    before_script:
        - export GRADLE_USER_HOME=`pwd`/.gradle
    cache:
        paths:
            - .gradle/wrapper
            - .gradle/caches
    script:
        - sh gradlew buildDoc buildJavaDoc
        - apt-get update && apt-get install -y rsync openssh-client
        - echo "$KEY_DOC" > ./doc.id_rsa && chmod 600 ./doc.id_rsa
        - rsync --delete -Pav -e "ssh -i ./doc.id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" target/javadoc/ www@bgerp.org:/home/www/www.bgerp.org/doc/3.0/javadoc/
        - rsync --delete -Pav -e "ssh -i ./doc.id_rsa -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null" target/doc/ www@bgerp.ru:/home/www/www.bgerp.ru/doc/3.0/manual/
    artifacts:
        paths:
            #- target/doc/*
        expire_in: 1 week
    only:
        refs:
            - p11862-documentation

publish-source:
    image: alpine
    before_script:
        - export REPO_PUB=/tmp/bgerp-pub
        - apk --no-cache add git git-lfs openssh-client bash
        - mkdir ~/.ssh && echo "$KEY_WWW" > ~/.ssh/id_rsa && chmod 600 ~/.ssh/id_rsa
        - ssh-keyscan github.com >> ~/.ssh/known_hosts
        # only to make git working
        - git config --global user.email "bgerp@bgerp.org"
        - git config --global user.name "BGERP"
    script:
        - REPO_FULL=`pwd`
        - git clone --depth 1 "file://$REPO_FULL" $REPO_PUB
        - COMMIT_COMMENT=`git show -s --format=%s`
        - echo "Set commit author" && chmod +x .gitlab-ci-publish-author.sh && COMMIT_AUTHOR=`bash .gitlab-ci-publish-author.sh`
        - cd $REPO_PUB && rm -r .git && rm .gitlab-ci-publish* && rm .github-fix* && rm -r src.bak
        - git init && git lfs install && git add . && git commit -m "Init"
        - git remote add origin git@github.com:Pingvin235/bgerp.git
        - git fetch && git reset --mixed origin/master
        - git add . && git commit --allow-empty --author="$env:$COMMIT_AUTHOR" -m "$COMMIT_COMMENT"
        - git show --summary
        - git push origin master
    only:
        refs:
            - master

