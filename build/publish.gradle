task publishChange(type: JavaExec, dependsOn: ['compileToolJava', 'touchChanges'], description: 'Copies changes modules to be available under https://bgerp.org/change') {
    mustRunAfter 'doc'
    mustRunAfter 'buildUpdate'
    mustRunAfter 'buildUpdateLib'
    classpath =  sourceSets.tool.runtimeClasspath
    mainClass = 'org.bgerp.tool.PublishChange'
    args "${->base.distsDirectory.get().asFile.path}", version, "${->getChangeIdOrThrow()}"
}

task publishRelease(type: JavaExec, dependsOn: 'compileToolJava', description: 'Copies distribution, update and update_lib packages to CDN server') {
    mustRunAfter 'buildUpdate'
    mustRunAfter 'buildUpdateLib'
    mustRunAfter 'changesFile'
    mustRunAfter 'changesRss'
    classpath =  sourceSets.tool.runtimeClasspath
    mainClass = 'org.bgerp.tool.PublishRelease'
    args "${->base.distsDirectory.get().asFile.path}", version, "${->getBuild()}"
}

task publishCommit(type: Exec, description: 'Commits modifications over build *.properties, changes.* and documentation files to GIT') {
    mustRunAfter 'updateProperties'
    mustRunAfter 'updateLibProperties'
    mustRunAfter 'changesFile'
    mustRunAfter 'changesRss'
    doFirst {
        exec {
            workingDir projectDir
            commandLine 'git', 'add', 'srcx/doc'
        }
        exec {
            workingDir "$projectDir/build"
            commandLine 'git', 'add', '*.properties', 'changes.txt', 'changes.*.txt'
        }
    }
    workingDir projectDir
    commandLine 'git', 'commit', "-m PUBLISH ${->getBuild()}"
}
